//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.225
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MContracts.CBR {
    using System.Data;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://web.cbr.ru/", ConfigurationName="CBR.DailyInfoSoap")]
    internal interface DailyInfoSoap {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://web.cbr.ru/SaldoXML", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Xml.XmlNode SaldoXML(System.DateTime fromDate, System.DateTime ToDate);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://web.cbr.ru/SaldoXML", ReplyAction="*")]
        System.IAsyncResult BeginSaldoXML(System.DateTime fromDate, System.DateTime ToDate, System.AsyncCallback callback, object asyncState);
        
        System.Xml.XmlNode EndSaldoXML(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://web.cbr.ru/mrrf7D", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet mrrf7D(System.DateTime fromDate, System.DateTime ToDate);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://web.cbr.ru/mrrf7D", ReplyAction="*")]
        System.IAsyncResult Beginmrrf7D(System.DateTime fromDate, System.DateTime ToDate, System.AsyncCallback callback, object asyncState);
        
        System.Data.DataSet Endmrrf7D(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://web.cbr.ru/mrrf7DXML", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Xml.XmlNode mrrf7DXML(System.DateTime fromDate, System.DateTime ToDate);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://web.cbr.ru/mrrf7DXML", ReplyAction="*")]
        System.IAsyncResult Beginmrrf7DXML(System.DateTime fromDate, System.DateTime ToDate, System.AsyncCallback callback, object asyncState);
        
        System.Xml.XmlNode Endmrrf7DXML(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://web.cbr.ru/mrrf", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet mrrf(System.DateTime fromDate, System.DateTime ToDate);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://web.cbr.ru/mrrf", ReplyAction="*")]
        System.IAsyncResult Beginmrrf(System.DateTime fromDate, System.DateTime ToDate, System.AsyncCallback callback, object asyncState);
        
        System.Data.DataSet Endmrrf(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://web.cbr.ru/mrrfXML", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Xml.XmlNode mrrfXML(System.DateTime fromDate, System.DateTime ToDate);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://web.cbr.ru/mrrfXML", ReplyAction="*")]
        System.IAsyncResult BeginmrrfXML(System.DateTime fromDate, System.DateTime ToDate, System.AsyncCallback callback, object asyncState);
        
        System.Xml.XmlNode EndmrrfXML(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://web.cbr.ru/Saldo", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet Saldo(System.DateTime fromDate, System.DateTime ToDate);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://web.cbr.ru/Saldo", ReplyAction="*")]
        System.IAsyncResult BeginSaldo(System.DateTime fromDate, System.DateTime ToDate, System.AsyncCallback callback, object asyncState);
        
        System.Data.DataSet EndSaldo(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://web.cbr.ru/NewsInfoXML", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Xml.XmlNode NewsInfoXML(System.DateTime fromDate, System.DateTime ToDate);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://web.cbr.ru/NewsInfoXML", ReplyAction="*")]
        System.IAsyncResult BeginNewsInfoXML(System.DateTime fromDate, System.DateTime ToDate, System.AsyncCallback callback, object asyncState);
        
        System.Xml.XmlNode EndNewsInfoXML(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://web.cbr.ru/OmodInfoXML", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Xml.XmlNode OmodInfoXML();
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://web.cbr.ru/OmodInfoXML", ReplyAction="*")]
        System.IAsyncResult BeginOmodInfoXML(System.AsyncCallback callback, object asyncState);
        
        System.Xml.XmlNode EndOmodInfoXML(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://web.cbr.ru/XVol", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet XVol(System.DateTime fromDate, System.DateTime ToDate);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://web.cbr.ru/XVol", ReplyAction="*")]
        System.IAsyncResult BeginXVol(System.DateTime fromDate, System.DateTime ToDate, System.AsyncCallback callback, object asyncState);
        
        System.Data.DataSet EndXVol(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://web.cbr.ru/XVolXML", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Xml.XmlNode XVolXML(System.DateTime fromDate, System.DateTime ToDate);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://web.cbr.ru/XVolXML", ReplyAction="*")]
        System.IAsyncResult BeginXVolXML(System.DateTime fromDate, System.DateTime ToDate, System.AsyncCallback callback, object asyncState);
        
        System.Xml.XmlNode EndXVolXML(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://web.cbr.ru/MainInfoXML", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Xml.XmlNode MainInfoXML();
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://web.cbr.ru/MainInfoXML", ReplyAction="*")]
        System.IAsyncResult BeginMainInfoXML(System.AsyncCallback callback, object asyncState);
        
        System.Xml.XmlNode EndMainInfoXML(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://web.cbr.ru/AllDataInfoXML", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Xml.XmlNode AllDataInfoXML();
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://web.cbr.ru/AllDataInfoXML", ReplyAction="*")]
        System.IAsyncResult BeginAllDataInfoXML(System.AsyncCallback callback, object asyncState);
        
        System.Xml.XmlNode EndAllDataInfoXML(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://web.cbr.ru/NewsInfo", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet NewsInfo(System.DateTime fromDate, System.DateTime ToDate);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://web.cbr.ru/NewsInfo", ReplyAction="*")]
        System.IAsyncResult BeginNewsInfo(System.DateTime fromDate, System.DateTime ToDate, System.AsyncCallback callback, object asyncState);
        
        System.Data.DataSet EndNewsInfo(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://web.cbr.ru/SwapDynamicXML", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Xml.XmlNode SwapDynamicXML(System.DateTime fromDate, System.DateTime ToDate);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://web.cbr.ru/SwapDynamicXML", ReplyAction="*")]
        System.IAsyncResult BeginSwapDynamicXML(System.DateTime fromDate, System.DateTime ToDate, System.AsyncCallback callback, object asyncState);
        
        System.Xml.XmlNode EndSwapDynamicXML(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://web.cbr.ru/SwapDynamic", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet SwapDynamic(System.DateTime fromDate, System.DateTime ToDate);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://web.cbr.ru/SwapDynamic", ReplyAction="*")]
        System.IAsyncResult BeginSwapDynamic(System.DateTime fromDate, System.DateTime ToDate, System.AsyncCallback callback, object asyncState);
        
        System.Data.DataSet EndSwapDynamic(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://web.cbr.ru/DepoDynamicXML", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Xml.XmlNode DepoDynamicXML(System.DateTime fromDate, System.DateTime ToDate);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://web.cbr.ru/DepoDynamicXML", ReplyAction="*")]
        System.IAsyncResult BeginDepoDynamicXML(System.DateTime fromDate, System.DateTime ToDate, System.AsyncCallback callback, object asyncState);
        
        System.Xml.XmlNode EndDepoDynamicXML(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://web.cbr.ru/DepoDynamic", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet DepoDynamic(System.DateTime fromDate, System.DateTime ToDate);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://web.cbr.ru/DepoDynamic", ReplyAction="*")]
        System.IAsyncResult BeginDepoDynamic(System.DateTime fromDate, System.DateTime ToDate, System.AsyncCallback callback, object asyncState);
        
        System.Data.DataSet EndDepoDynamic(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://web.cbr.ru/OstatDynamicXML", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Xml.XmlNode OstatDynamicXML(System.DateTime fromDate, System.DateTime ToDate);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://web.cbr.ru/OstatDynamicXML", ReplyAction="*")]
        System.IAsyncResult BeginOstatDynamicXML(System.DateTime fromDate, System.DateTime ToDate, System.AsyncCallback callback, object asyncState);
        
        System.Xml.XmlNode EndOstatDynamicXML(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://web.cbr.ru/OstatDynamic", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet OstatDynamic(System.DateTime fromDate, System.DateTime ToDate);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://web.cbr.ru/OstatDynamic", ReplyAction="*")]
        System.IAsyncResult BeginOstatDynamic(System.DateTime fromDate, System.DateTime ToDate, System.AsyncCallback callback, object asyncState);
        
        System.Data.DataSet EndOstatDynamic(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://web.cbr.ru/DragMetDynamicXML", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Xml.XmlNode DragMetDynamicXML(System.DateTime fromDate, System.DateTime ToDate);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://web.cbr.ru/DragMetDynamicXML", ReplyAction="*")]
        System.IAsyncResult BeginDragMetDynamicXML(System.DateTime fromDate, System.DateTime ToDate, System.AsyncCallback callback, object asyncState);
        
        System.Xml.XmlNode EndDragMetDynamicXML(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://web.cbr.ru/DragMetDynamic", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet DragMetDynamic(System.DateTime fromDate, System.DateTime ToDate);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://web.cbr.ru/DragMetDynamic", ReplyAction="*")]
        System.IAsyncResult BeginDragMetDynamic(System.DateTime fromDate, System.DateTime ToDate, System.AsyncCallback callback, object asyncState);
        
        System.Data.DataSet EndDragMetDynamic(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://web.cbr.ru/GetLatestDateTime", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.DateTime GetLatestDateTime();
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://web.cbr.ru/GetLatestDateTime", ReplyAction="*")]
        System.IAsyncResult BeginGetLatestDateTime(System.AsyncCallback callback, object asyncState);
        
        System.DateTime EndGetLatestDateTime(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://web.cbr.ru/GetLatestDate", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string GetLatestDate();
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://web.cbr.ru/GetLatestDate", ReplyAction="*")]
        System.IAsyncResult BeginGetLatestDate(System.AsyncCallback callback, object asyncState);
        
        string EndGetLatestDate(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://web.cbr.ru/GetLatestDateTimeSeld", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.DateTime GetLatestDateTimeSeld();
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://web.cbr.ru/GetLatestDateTimeSeld", ReplyAction="*")]
        System.IAsyncResult BeginGetLatestDateTimeSeld(System.AsyncCallback callback, object asyncState);
        
        System.DateTime EndGetLatestDateTimeSeld(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://web.cbr.ru/GetLatestDateSeld", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string GetLatestDateSeld();
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://web.cbr.ru/GetLatestDateSeld", ReplyAction="*")]
        System.IAsyncResult BeginGetLatestDateSeld(System.AsyncCallback callback, object asyncState);
        
        string EndGetLatestDateSeld(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://web.cbr.ru/EnumValutesXML", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Xml.XmlNode EnumValutesXML(bool Seld);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://web.cbr.ru/EnumValutesXML", ReplyAction="*")]
        System.IAsyncResult BeginEnumValutesXML(bool Seld, System.AsyncCallback callback, object asyncState);
        
        System.Xml.XmlNode EndEnumValutesXML(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://web.cbr.ru/EnumValutes", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet EnumValutes(bool Seld);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://web.cbr.ru/EnumValutes", ReplyAction="*")]
        System.IAsyncResult BeginEnumValutes(bool Seld, System.AsyncCallback callback, object asyncState);
        
        System.Data.DataSet EndEnumValutes(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://web.cbr.ru/GetCursDynamicXML", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Xml.XmlNode GetCursDynamicXML(System.DateTime FromDate, System.DateTime ToDate, string ValutaCode);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://web.cbr.ru/GetCursDynamicXML", ReplyAction="*")]
        System.IAsyncResult BeginGetCursDynamicXML(System.DateTime FromDate, System.DateTime ToDate, string ValutaCode, System.AsyncCallback callback, object asyncState);
        
        System.Xml.XmlNode EndGetCursDynamicXML(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://web.cbr.ru/GetCursDynamic", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetCursDynamic(System.DateTime FromDate, System.DateTime ToDate, string ValutaCode);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://web.cbr.ru/GetCursDynamic", ReplyAction="*")]
        System.IAsyncResult BeginGetCursDynamic(System.DateTime FromDate, System.DateTime ToDate, string ValutaCode, System.AsyncCallback callback, object asyncState);
        
        System.Data.DataSet EndGetCursDynamic(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://web.cbr.ru/GetCursOnDateXML", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Xml.XmlNode GetCursOnDateXML(System.DateTime On_date);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://web.cbr.ru/GetCursOnDateXML", ReplyAction="*")]
        System.IAsyncResult BeginGetCursOnDateXML(System.DateTime On_date, System.AsyncCallback callback, object asyncState);
        
        System.Xml.XmlNode EndGetCursOnDateXML(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://web.cbr.ru/GetSeldCursOnDateXML", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Xml.XmlNode GetSeldCursOnDateXML(System.DateTime On_date);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://web.cbr.ru/GetSeldCursOnDateXML", ReplyAction="*")]
        System.IAsyncResult BeginGetSeldCursOnDateXML(System.DateTime On_date, System.AsyncCallback callback, object asyncState);
        
        System.Xml.XmlNode EndGetSeldCursOnDateXML(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://web.cbr.ru/GetSeldCursOnDate", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetSeldCursOnDate(System.DateTime On_date);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://web.cbr.ru/GetSeldCursOnDate", ReplyAction="*")]
        System.IAsyncResult BeginGetSeldCursOnDate(System.DateTime On_date, System.AsyncCallback callback, object asyncState);
        
        System.Data.DataSet EndGetSeldCursOnDate(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://web.cbr.ru/GetCursOnDate", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetCursOnDate(System.DateTime On_date);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://web.cbr.ru/GetCursOnDate", ReplyAction="*")]
        System.IAsyncResult BeginGetCursOnDate(System.DateTime On_date, System.AsyncCallback callback, object asyncState);
        
        System.Data.DataSet EndGetCursOnDate(System.IAsyncResult result);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    internal interface DailyInfoSoapChannel : MContracts.CBR.DailyInfoSoap, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    internal partial class SaldoXMLCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public SaldoXMLCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Xml.XmlNode Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    internal partial class mrrf7DCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public mrrf7DCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Data.DataSet Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    internal partial class mrrf7DXMLCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public mrrf7DXMLCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Xml.XmlNode Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    internal partial class mrrfCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public mrrfCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Data.DataSet Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    internal partial class mrrfXMLCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public mrrfXMLCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Xml.XmlNode Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    internal partial class SaldoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public SaldoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Data.DataSet Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    internal partial class NewsInfoXMLCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public NewsInfoXMLCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Xml.XmlNode Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    internal partial class OmodInfoXMLCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public OmodInfoXMLCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Xml.XmlNode Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    internal partial class XVolCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public XVolCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Data.DataSet Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    internal partial class XVolXMLCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public XVolXMLCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Xml.XmlNode Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    internal partial class MainInfoXMLCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public MainInfoXMLCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Xml.XmlNode Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    internal partial class AllDataInfoXMLCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public AllDataInfoXMLCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Xml.XmlNode Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    internal partial class NewsInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public NewsInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Data.DataSet Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    internal partial class SwapDynamicXMLCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public SwapDynamicXMLCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Xml.XmlNode Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    internal partial class SwapDynamicCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public SwapDynamicCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Data.DataSet Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    internal partial class DepoDynamicXMLCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public DepoDynamicXMLCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Xml.XmlNode Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    internal partial class DepoDynamicCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public DepoDynamicCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Data.DataSet Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    internal partial class OstatDynamicXMLCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public OstatDynamicXMLCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Xml.XmlNode Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    internal partial class OstatDynamicCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public OstatDynamicCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Data.DataSet Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    internal partial class DragMetDynamicXMLCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public DragMetDynamicXMLCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Xml.XmlNode Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    internal partial class DragMetDynamicCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public DragMetDynamicCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Data.DataSet Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    internal partial class GetLatestDateTimeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetLatestDateTimeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.DateTime Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.DateTime)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    internal partial class GetLatestDateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetLatestDateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    internal partial class GetLatestDateTimeSeldCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetLatestDateTimeSeldCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.DateTime Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.DateTime)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    internal partial class GetLatestDateSeldCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetLatestDateSeldCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    internal partial class EnumValutesXMLCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public EnumValutesXMLCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Xml.XmlNode Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    internal partial class EnumValutesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public EnumValutesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Data.DataSet Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    internal partial class GetCursDynamicXMLCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetCursDynamicXMLCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Xml.XmlNode Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    internal partial class GetCursDynamicCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetCursDynamicCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Data.DataSet Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    internal partial class GetCursOnDateXMLCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetCursOnDateXMLCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Xml.XmlNode Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    internal partial class GetSeldCursOnDateXMLCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetSeldCursOnDateXMLCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Xml.XmlNode Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    internal partial class GetSeldCursOnDateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetSeldCursOnDateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Data.DataSet Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    internal partial class GetCursOnDateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetCursOnDateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Data.DataSet Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    internal partial class DailyInfoSoapClient : System.ServiceModel.ClientBase<MContracts.CBR.DailyInfoSoap>, MContracts.CBR.DailyInfoSoap {
        
        private BeginOperationDelegate onBeginSaldoXMLDelegate;
        
        private EndOperationDelegate onEndSaldoXMLDelegate;
        
        private System.Threading.SendOrPostCallback onSaldoXMLCompletedDelegate;
        
        private BeginOperationDelegate onBeginmrrf7DDelegate;
        
        private EndOperationDelegate onEndmrrf7DDelegate;
        
        private System.Threading.SendOrPostCallback onmrrf7DCompletedDelegate;
        
        private BeginOperationDelegate onBeginmrrf7DXMLDelegate;
        
        private EndOperationDelegate onEndmrrf7DXMLDelegate;
        
        private System.Threading.SendOrPostCallback onmrrf7DXMLCompletedDelegate;
        
        private BeginOperationDelegate onBeginmrrfDelegate;
        
        private EndOperationDelegate onEndmrrfDelegate;
        
        private System.Threading.SendOrPostCallback onmrrfCompletedDelegate;
        
        private BeginOperationDelegate onBeginmrrfXMLDelegate;
        
        private EndOperationDelegate onEndmrrfXMLDelegate;
        
        private System.Threading.SendOrPostCallback onmrrfXMLCompletedDelegate;
        
        private BeginOperationDelegate onBeginSaldoDelegate;
        
        private EndOperationDelegate onEndSaldoDelegate;
        
        private System.Threading.SendOrPostCallback onSaldoCompletedDelegate;
        
        private BeginOperationDelegate onBeginNewsInfoXMLDelegate;
        
        private EndOperationDelegate onEndNewsInfoXMLDelegate;
        
        private System.Threading.SendOrPostCallback onNewsInfoXMLCompletedDelegate;
        
        private BeginOperationDelegate onBeginOmodInfoXMLDelegate;
        
        private EndOperationDelegate onEndOmodInfoXMLDelegate;
        
        private System.Threading.SendOrPostCallback onOmodInfoXMLCompletedDelegate;
        
        private BeginOperationDelegate onBeginXVolDelegate;
        
        private EndOperationDelegate onEndXVolDelegate;
        
        private System.Threading.SendOrPostCallback onXVolCompletedDelegate;
        
        private BeginOperationDelegate onBeginXVolXMLDelegate;
        
        private EndOperationDelegate onEndXVolXMLDelegate;
        
        private System.Threading.SendOrPostCallback onXVolXMLCompletedDelegate;
        
        private BeginOperationDelegate onBeginMainInfoXMLDelegate;
        
        private EndOperationDelegate onEndMainInfoXMLDelegate;
        
        private System.Threading.SendOrPostCallback onMainInfoXMLCompletedDelegate;
        
        private BeginOperationDelegate onBeginAllDataInfoXMLDelegate;
        
        private EndOperationDelegate onEndAllDataInfoXMLDelegate;
        
        private System.Threading.SendOrPostCallback onAllDataInfoXMLCompletedDelegate;
        
        private BeginOperationDelegate onBeginNewsInfoDelegate;
        
        private EndOperationDelegate onEndNewsInfoDelegate;
        
        private System.Threading.SendOrPostCallback onNewsInfoCompletedDelegate;
        
        private BeginOperationDelegate onBeginSwapDynamicXMLDelegate;
        
        private EndOperationDelegate onEndSwapDynamicXMLDelegate;
        
        private System.Threading.SendOrPostCallback onSwapDynamicXMLCompletedDelegate;
        
        private BeginOperationDelegate onBeginSwapDynamicDelegate;
        
        private EndOperationDelegate onEndSwapDynamicDelegate;
        
        private System.Threading.SendOrPostCallback onSwapDynamicCompletedDelegate;
        
        private BeginOperationDelegate onBeginDepoDynamicXMLDelegate;
        
        private EndOperationDelegate onEndDepoDynamicXMLDelegate;
        
        private System.Threading.SendOrPostCallback onDepoDynamicXMLCompletedDelegate;
        
        private BeginOperationDelegate onBeginDepoDynamicDelegate;
        
        private EndOperationDelegate onEndDepoDynamicDelegate;
        
        private System.Threading.SendOrPostCallback onDepoDynamicCompletedDelegate;
        
        private BeginOperationDelegate onBeginOstatDynamicXMLDelegate;
        
        private EndOperationDelegate onEndOstatDynamicXMLDelegate;
        
        private System.Threading.SendOrPostCallback onOstatDynamicXMLCompletedDelegate;
        
        private BeginOperationDelegate onBeginOstatDynamicDelegate;
        
        private EndOperationDelegate onEndOstatDynamicDelegate;
        
        private System.Threading.SendOrPostCallback onOstatDynamicCompletedDelegate;
        
        private BeginOperationDelegate onBeginDragMetDynamicXMLDelegate;
        
        private EndOperationDelegate onEndDragMetDynamicXMLDelegate;
        
        private System.Threading.SendOrPostCallback onDragMetDynamicXMLCompletedDelegate;
        
        private BeginOperationDelegate onBeginDragMetDynamicDelegate;
        
        private EndOperationDelegate onEndDragMetDynamicDelegate;
        
        private System.Threading.SendOrPostCallback onDragMetDynamicCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetLatestDateTimeDelegate;
        
        private EndOperationDelegate onEndGetLatestDateTimeDelegate;
        
        private System.Threading.SendOrPostCallback onGetLatestDateTimeCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetLatestDateDelegate;
        
        private EndOperationDelegate onEndGetLatestDateDelegate;
        
        private System.Threading.SendOrPostCallback onGetLatestDateCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetLatestDateTimeSeldDelegate;
        
        private EndOperationDelegate onEndGetLatestDateTimeSeldDelegate;
        
        private System.Threading.SendOrPostCallback onGetLatestDateTimeSeldCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetLatestDateSeldDelegate;
        
        private EndOperationDelegate onEndGetLatestDateSeldDelegate;
        
        private System.Threading.SendOrPostCallback onGetLatestDateSeldCompletedDelegate;
        
        private BeginOperationDelegate onBeginEnumValutesXMLDelegate;
        
        private EndOperationDelegate onEndEnumValutesXMLDelegate;
        
        private System.Threading.SendOrPostCallback onEnumValutesXMLCompletedDelegate;
        
        private BeginOperationDelegate onBeginEnumValutesDelegate;
        
        private EndOperationDelegate onEndEnumValutesDelegate;
        
        private System.Threading.SendOrPostCallback onEnumValutesCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetCursDynamicXMLDelegate;
        
        private EndOperationDelegate onEndGetCursDynamicXMLDelegate;
        
        private System.Threading.SendOrPostCallback onGetCursDynamicXMLCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetCursDynamicDelegate;
        
        private EndOperationDelegate onEndGetCursDynamicDelegate;
        
        private System.Threading.SendOrPostCallback onGetCursDynamicCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetCursOnDateXMLDelegate;
        
        private EndOperationDelegate onEndGetCursOnDateXMLDelegate;
        
        private System.Threading.SendOrPostCallback onGetCursOnDateXMLCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetSeldCursOnDateXMLDelegate;
        
        private EndOperationDelegate onEndGetSeldCursOnDateXMLDelegate;
        
        private System.Threading.SendOrPostCallback onGetSeldCursOnDateXMLCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetSeldCursOnDateDelegate;
        
        private EndOperationDelegate onEndGetSeldCursOnDateDelegate;
        
        private System.Threading.SendOrPostCallback onGetSeldCursOnDateCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetCursOnDateDelegate;
        
        private EndOperationDelegate onEndGetCursOnDateDelegate;
        
        private System.Threading.SendOrPostCallback onGetCursOnDateCompletedDelegate;
        
        public DailyInfoSoapClient() {
        }
        
        public DailyInfoSoapClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public DailyInfoSoapClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public DailyInfoSoapClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public DailyInfoSoapClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public event System.EventHandler<SaldoXMLCompletedEventArgs> SaldoXMLCompleted;
        
        public event System.EventHandler<mrrf7DCompletedEventArgs> mrrf7DCompleted;
        
        public event System.EventHandler<mrrf7DXMLCompletedEventArgs> mrrf7DXMLCompleted;
        
        public event System.EventHandler<mrrfCompletedEventArgs> mrrfCompleted;
        
        public event System.EventHandler<mrrfXMLCompletedEventArgs> mrrfXMLCompleted;
        
        public event System.EventHandler<SaldoCompletedEventArgs> SaldoCompleted;
        
        public event System.EventHandler<NewsInfoXMLCompletedEventArgs> NewsInfoXMLCompleted;
        
        public event System.EventHandler<OmodInfoXMLCompletedEventArgs> OmodInfoXMLCompleted;
        
        public event System.EventHandler<XVolCompletedEventArgs> XVolCompleted;
        
        public event System.EventHandler<XVolXMLCompletedEventArgs> XVolXMLCompleted;
        
        public event System.EventHandler<MainInfoXMLCompletedEventArgs> MainInfoXMLCompleted;
        
        public event System.EventHandler<AllDataInfoXMLCompletedEventArgs> AllDataInfoXMLCompleted;
        
        public event System.EventHandler<NewsInfoCompletedEventArgs> NewsInfoCompleted;
        
        public event System.EventHandler<SwapDynamicXMLCompletedEventArgs> SwapDynamicXMLCompleted;
        
        public event System.EventHandler<SwapDynamicCompletedEventArgs> SwapDynamicCompleted;
        
        public event System.EventHandler<DepoDynamicXMLCompletedEventArgs> DepoDynamicXMLCompleted;
        
        public event System.EventHandler<DepoDynamicCompletedEventArgs> DepoDynamicCompleted;
        
        public event System.EventHandler<OstatDynamicXMLCompletedEventArgs> OstatDynamicXMLCompleted;
        
        public event System.EventHandler<OstatDynamicCompletedEventArgs> OstatDynamicCompleted;
        
        public event System.EventHandler<DragMetDynamicXMLCompletedEventArgs> DragMetDynamicXMLCompleted;
        
        public event System.EventHandler<DragMetDynamicCompletedEventArgs> DragMetDynamicCompleted;
        
        public event System.EventHandler<GetLatestDateTimeCompletedEventArgs> GetLatestDateTimeCompleted;
        
        public event System.EventHandler<GetLatestDateCompletedEventArgs> GetLatestDateCompleted;
        
        public event System.EventHandler<GetLatestDateTimeSeldCompletedEventArgs> GetLatestDateTimeSeldCompleted;
        
        public event System.EventHandler<GetLatestDateSeldCompletedEventArgs> GetLatestDateSeldCompleted;
        
        public event System.EventHandler<EnumValutesXMLCompletedEventArgs> EnumValutesXMLCompleted;
        
        public event System.EventHandler<EnumValutesCompletedEventArgs> EnumValutesCompleted;
        
        public event System.EventHandler<GetCursDynamicXMLCompletedEventArgs> GetCursDynamicXMLCompleted;
        
        public event System.EventHandler<GetCursDynamicCompletedEventArgs> GetCursDynamicCompleted;
        
        public event System.EventHandler<GetCursOnDateXMLCompletedEventArgs> GetCursOnDateXMLCompleted;
        
        public event System.EventHandler<GetSeldCursOnDateXMLCompletedEventArgs> GetSeldCursOnDateXMLCompleted;
        
        public event System.EventHandler<GetSeldCursOnDateCompletedEventArgs> GetSeldCursOnDateCompleted;
        
        public event System.EventHandler<GetCursOnDateCompletedEventArgs> GetCursOnDateCompleted;
        
        public System.Xml.XmlNode SaldoXML(System.DateTime fromDate, System.DateTime ToDate) {
            return base.Channel.SaldoXML(fromDate, ToDate);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginSaldoXML(System.DateTime fromDate, System.DateTime ToDate, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginSaldoXML(fromDate, ToDate, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Xml.XmlNode EndSaldoXML(System.IAsyncResult result) {
            return base.Channel.EndSaldoXML(result);
        }
        
        private System.IAsyncResult OnBeginSaldoXML(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.DateTime fromDate = ((System.DateTime)(inValues[0]));
            System.DateTime ToDate = ((System.DateTime)(inValues[1]));
            return this.BeginSaldoXML(fromDate, ToDate, callback, asyncState);
        }
        
        private object[] OnEndSaldoXML(System.IAsyncResult result) {
            System.Xml.XmlNode retVal = this.EndSaldoXML(result);
            return new object[] {
                    retVal};
        }
        
        private void OnSaldoXMLCompleted(object state) {
            if ((this.SaldoXMLCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.SaldoXMLCompleted(this, new SaldoXMLCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void SaldoXMLAsync(System.DateTime fromDate, System.DateTime ToDate) {
            this.SaldoXMLAsync(fromDate, ToDate, null);
        }
        
        public void SaldoXMLAsync(System.DateTime fromDate, System.DateTime ToDate, object userState) {
            if ((this.onBeginSaldoXMLDelegate == null)) {
                this.onBeginSaldoXMLDelegate = new BeginOperationDelegate(this.OnBeginSaldoXML);
            }
            if ((this.onEndSaldoXMLDelegate == null)) {
                this.onEndSaldoXMLDelegate = new EndOperationDelegate(this.OnEndSaldoXML);
            }
            if ((this.onSaldoXMLCompletedDelegate == null)) {
                this.onSaldoXMLCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSaldoXMLCompleted);
            }
            base.InvokeAsync(this.onBeginSaldoXMLDelegate, new object[] {
                        fromDate,
                        ToDate}, this.onEndSaldoXMLDelegate, this.onSaldoXMLCompletedDelegate, userState);
        }
        
        public System.Data.DataSet mrrf7D(System.DateTime fromDate, System.DateTime ToDate) {
            return base.Channel.mrrf7D(fromDate, ToDate);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult Beginmrrf7D(System.DateTime fromDate, System.DateTime ToDate, System.AsyncCallback callback, object asyncState) {
            return base.Channel.Beginmrrf7D(fromDate, ToDate, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Data.DataSet Endmrrf7D(System.IAsyncResult result) {
            return base.Channel.Endmrrf7D(result);
        }
        
        private System.IAsyncResult OnBeginmrrf7D(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.DateTime fromDate = ((System.DateTime)(inValues[0]));
            System.DateTime ToDate = ((System.DateTime)(inValues[1]));
            return this.Beginmrrf7D(fromDate, ToDate, callback, asyncState);
        }
        
        private object[] OnEndmrrf7D(System.IAsyncResult result) {
            System.Data.DataSet retVal = this.Endmrrf7D(result);
            return new object[] {
                    retVal};
        }
        
        private void Onmrrf7DCompleted(object state) {
            if ((this.mrrf7DCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.mrrf7DCompleted(this, new mrrf7DCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void mrrf7DAsync(System.DateTime fromDate, System.DateTime ToDate) {
            this.mrrf7DAsync(fromDate, ToDate, null);
        }
        
        public void mrrf7DAsync(System.DateTime fromDate, System.DateTime ToDate, object userState) {
            if ((this.onBeginmrrf7DDelegate == null)) {
                this.onBeginmrrf7DDelegate = new BeginOperationDelegate(this.OnBeginmrrf7D);
            }
            if ((this.onEndmrrf7DDelegate == null)) {
                this.onEndmrrf7DDelegate = new EndOperationDelegate(this.OnEndmrrf7D);
            }
            if ((this.onmrrf7DCompletedDelegate == null)) {
                this.onmrrf7DCompletedDelegate = new System.Threading.SendOrPostCallback(this.Onmrrf7DCompleted);
            }
            base.InvokeAsync(this.onBeginmrrf7DDelegate, new object[] {
                        fromDate,
                        ToDate}, this.onEndmrrf7DDelegate, this.onmrrf7DCompletedDelegate, userState);
        }
        
        public System.Xml.XmlNode mrrf7DXML(System.DateTime fromDate, System.DateTime ToDate) {
            return base.Channel.mrrf7DXML(fromDate, ToDate);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult Beginmrrf7DXML(System.DateTime fromDate, System.DateTime ToDate, System.AsyncCallback callback, object asyncState) {
            return base.Channel.Beginmrrf7DXML(fromDate, ToDate, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Xml.XmlNode Endmrrf7DXML(System.IAsyncResult result) {
            return base.Channel.Endmrrf7DXML(result);
        }
        
        private System.IAsyncResult OnBeginmrrf7DXML(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.DateTime fromDate = ((System.DateTime)(inValues[0]));
            System.DateTime ToDate = ((System.DateTime)(inValues[1]));
            return this.Beginmrrf7DXML(fromDate, ToDate, callback, asyncState);
        }
        
        private object[] OnEndmrrf7DXML(System.IAsyncResult result) {
            System.Xml.XmlNode retVal = this.Endmrrf7DXML(result);
            return new object[] {
                    retVal};
        }
        
        private void Onmrrf7DXMLCompleted(object state) {
            if ((this.mrrf7DXMLCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.mrrf7DXMLCompleted(this, new mrrf7DXMLCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void mrrf7DXMLAsync(System.DateTime fromDate, System.DateTime ToDate) {
            this.mrrf7DXMLAsync(fromDate, ToDate, null);
        }
        
        public void mrrf7DXMLAsync(System.DateTime fromDate, System.DateTime ToDate, object userState) {
            if ((this.onBeginmrrf7DXMLDelegate == null)) {
                this.onBeginmrrf7DXMLDelegate = new BeginOperationDelegate(this.OnBeginmrrf7DXML);
            }
            if ((this.onEndmrrf7DXMLDelegate == null)) {
                this.onEndmrrf7DXMLDelegate = new EndOperationDelegate(this.OnEndmrrf7DXML);
            }
            if ((this.onmrrf7DXMLCompletedDelegate == null)) {
                this.onmrrf7DXMLCompletedDelegate = new System.Threading.SendOrPostCallback(this.Onmrrf7DXMLCompleted);
            }
            base.InvokeAsync(this.onBeginmrrf7DXMLDelegate, new object[] {
                        fromDate,
                        ToDate}, this.onEndmrrf7DXMLDelegate, this.onmrrf7DXMLCompletedDelegate, userState);
        }
        
        public System.Data.DataSet mrrf(System.DateTime fromDate, System.DateTime ToDate) {
            return base.Channel.mrrf(fromDate, ToDate);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult Beginmrrf(System.DateTime fromDate, System.DateTime ToDate, System.AsyncCallback callback, object asyncState) {
            return base.Channel.Beginmrrf(fromDate, ToDate, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Data.DataSet Endmrrf(System.IAsyncResult result) {
            return base.Channel.Endmrrf(result);
        }
        
        private System.IAsyncResult OnBeginmrrf(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.DateTime fromDate = ((System.DateTime)(inValues[0]));
            System.DateTime ToDate = ((System.DateTime)(inValues[1]));
            return this.Beginmrrf(fromDate, ToDate, callback, asyncState);
        }
        
        private object[] OnEndmrrf(System.IAsyncResult result) {
            System.Data.DataSet retVal = this.Endmrrf(result);
            return new object[] {
                    retVal};
        }
        
        private void OnmrrfCompleted(object state) {
            if ((this.mrrfCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.mrrfCompleted(this, new mrrfCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void mrrfAsync(System.DateTime fromDate, System.DateTime ToDate) {
            this.mrrfAsync(fromDate, ToDate, null);
        }
        
        public void mrrfAsync(System.DateTime fromDate, System.DateTime ToDate, object userState) {
            if ((this.onBeginmrrfDelegate == null)) {
                this.onBeginmrrfDelegate = new BeginOperationDelegate(this.OnBeginmrrf);
            }
            if ((this.onEndmrrfDelegate == null)) {
                this.onEndmrrfDelegate = new EndOperationDelegate(this.OnEndmrrf);
            }
            if ((this.onmrrfCompletedDelegate == null)) {
                this.onmrrfCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnmrrfCompleted);
            }
            base.InvokeAsync(this.onBeginmrrfDelegate, new object[] {
                        fromDate,
                        ToDate}, this.onEndmrrfDelegate, this.onmrrfCompletedDelegate, userState);
        }
        
        public System.Xml.XmlNode mrrfXML(System.DateTime fromDate, System.DateTime ToDate) {
            return base.Channel.mrrfXML(fromDate, ToDate);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginmrrfXML(System.DateTime fromDate, System.DateTime ToDate, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginmrrfXML(fromDate, ToDate, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Xml.XmlNode EndmrrfXML(System.IAsyncResult result) {
            return base.Channel.EndmrrfXML(result);
        }
        
        private System.IAsyncResult OnBeginmrrfXML(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.DateTime fromDate = ((System.DateTime)(inValues[0]));
            System.DateTime ToDate = ((System.DateTime)(inValues[1]));
            return this.BeginmrrfXML(fromDate, ToDate, callback, asyncState);
        }
        
        private object[] OnEndmrrfXML(System.IAsyncResult result) {
            System.Xml.XmlNode retVal = this.EndmrrfXML(result);
            return new object[] {
                    retVal};
        }
        
        private void OnmrrfXMLCompleted(object state) {
            if ((this.mrrfXMLCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.mrrfXMLCompleted(this, new mrrfXMLCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void mrrfXMLAsync(System.DateTime fromDate, System.DateTime ToDate) {
            this.mrrfXMLAsync(fromDate, ToDate, null);
        }
        
        public void mrrfXMLAsync(System.DateTime fromDate, System.DateTime ToDate, object userState) {
            if ((this.onBeginmrrfXMLDelegate == null)) {
                this.onBeginmrrfXMLDelegate = new BeginOperationDelegate(this.OnBeginmrrfXML);
            }
            if ((this.onEndmrrfXMLDelegate == null)) {
                this.onEndmrrfXMLDelegate = new EndOperationDelegate(this.OnEndmrrfXML);
            }
            if ((this.onmrrfXMLCompletedDelegate == null)) {
                this.onmrrfXMLCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnmrrfXMLCompleted);
            }
            base.InvokeAsync(this.onBeginmrrfXMLDelegate, new object[] {
                        fromDate,
                        ToDate}, this.onEndmrrfXMLDelegate, this.onmrrfXMLCompletedDelegate, userState);
        }
        
        public System.Data.DataSet Saldo(System.DateTime fromDate, System.DateTime ToDate) {
            return base.Channel.Saldo(fromDate, ToDate);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginSaldo(System.DateTime fromDate, System.DateTime ToDate, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginSaldo(fromDate, ToDate, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Data.DataSet EndSaldo(System.IAsyncResult result) {
            return base.Channel.EndSaldo(result);
        }
        
        private System.IAsyncResult OnBeginSaldo(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.DateTime fromDate = ((System.DateTime)(inValues[0]));
            System.DateTime ToDate = ((System.DateTime)(inValues[1]));
            return this.BeginSaldo(fromDate, ToDate, callback, asyncState);
        }
        
        private object[] OnEndSaldo(System.IAsyncResult result) {
            System.Data.DataSet retVal = this.EndSaldo(result);
            return new object[] {
                    retVal};
        }
        
        private void OnSaldoCompleted(object state) {
            if ((this.SaldoCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.SaldoCompleted(this, new SaldoCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void SaldoAsync(System.DateTime fromDate, System.DateTime ToDate) {
            this.SaldoAsync(fromDate, ToDate, null);
        }
        
        public void SaldoAsync(System.DateTime fromDate, System.DateTime ToDate, object userState) {
            if ((this.onBeginSaldoDelegate == null)) {
                this.onBeginSaldoDelegate = new BeginOperationDelegate(this.OnBeginSaldo);
            }
            if ((this.onEndSaldoDelegate == null)) {
                this.onEndSaldoDelegate = new EndOperationDelegate(this.OnEndSaldo);
            }
            if ((this.onSaldoCompletedDelegate == null)) {
                this.onSaldoCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSaldoCompleted);
            }
            base.InvokeAsync(this.onBeginSaldoDelegate, new object[] {
                        fromDate,
                        ToDate}, this.onEndSaldoDelegate, this.onSaldoCompletedDelegate, userState);
        }
        
        public System.Xml.XmlNode NewsInfoXML(System.DateTime fromDate, System.DateTime ToDate) {
            return base.Channel.NewsInfoXML(fromDate, ToDate);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginNewsInfoXML(System.DateTime fromDate, System.DateTime ToDate, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginNewsInfoXML(fromDate, ToDate, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Xml.XmlNode EndNewsInfoXML(System.IAsyncResult result) {
            return base.Channel.EndNewsInfoXML(result);
        }
        
        private System.IAsyncResult OnBeginNewsInfoXML(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.DateTime fromDate = ((System.DateTime)(inValues[0]));
            System.DateTime ToDate = ((System.DateTime)(inValues[1]));
            return this.BeginNewsInfoXML(fromDate, ToDate, callback, asyncState);
        }
        
        private object[] OnEndNewsInfoXML(System.IAsyncResult result) {
            System.Xml.XmlNode retVal = this.EndNewsInfoXML(result);
            return new object[] {
                    retVal};
        }
        
        private void OnNewsInfoXMLCompleted(object state) {
            if ((this.NewsInfoXMLCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.NewsInfoXMLCompleted(this, new NewsInfoXMLCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void NewsInfoXMLAsync(System.DateTime fromDate, System.DateTime ToDate) {
            this.NewsInfoXMLAsync(fromDate, ToDate, null);
        }
        
        public void NewsInfoXMLAsync(System.DateTime fromDate, System.DateTime ToDate, object userState) {
            if ((this.onBeginNewsInfoXMLDelegate == null)) {
                this.onBeginNewsInfoXMLDelegate = new BeginOperationDelegate(this.OnBeginNewsInfoXML);
            }
            if ((this.onEndNewsInfoXMLDelegate == null)) {
                this.onEndNewsInfoXMLDelegate = new EndOperationDelegate(this.OnEndNewsInfoXML);
            }
            if ((this.onNewsInfoXMLCompletedDelegate == null)) {
                this.onNewsInfoXMLCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnNewsInfoXMLCompleted);
            }
            base.InvokeAsync(this.onBeginNewsInfoXMLDelegate, new object[] {
                        fromDate,
                        ToDate}, this.onEndNewsInfoXMLDelegate, this.onNewsInfoXMLCompletedDelegate, userState);
        }
        
        public System.Xml.XmlNode OmodInfoXML() {
            return base.Channel.OmodInfoXML();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginOmodInfoXML(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginOmodInfoXML(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Xml.XmlNode EndOmodInfoXML(System.IAsyncResult result) {
            return base.Channel.EndOmodInfoXML(result);
        }
        
        private System.IAsyncResult OnBeginOmodInfoXML(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginOmodInfoXML(callback, asyncState);
        }
        
        private object[] OnEndOmodInfoXML(System.IAsyncResult result) {
            System.Xml.XmlNode retVal = this.EndOmodInfoXML(result);
            return new object[] {
                    retVal};
        }
        
        private void OnOmodInfoXMLCompleted(object state) {
            if ((this.OmodInfoXMLCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.OmodInfoXMLCompleted(this, new OmodInfoXMLCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void OmodInfoXMLAsync() {
            this.OmodInfoXMLAsync(null);
        }
        
        public void OmodInfoXMLAsync(object userState) {
            if ((this.onBeginOmodInfoXMLDelegate == null)) {
                this.onBeginOmodInfoXMLDelegate = new BeginOperationDelegate(this.OnBeginOmodInfoXML);
            }
            if ((this.onEndOmodInfoXMLDelegate == null)) {
                this.onEndOmodInfoXMLDelegate = new EndOperationDelegate(this.OnEndOmodInfoXML);
            }
            if ((this.onOmodInfoXMLCompletedDelegate == null)) {
                this.onOmodInfoXMLCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnOmodInfoXMLCompleted);
            }
            base.InvokeAsync(this.onBeginOmodInfoXMLDelegate, null, this.onEndOmodInfoXMLDelegate, this.onOmodInfoXMLCompletedDelegate, userState);
        }
        
        public System.Data.DataSet XVol(System.DateTime fromDate, System.DateTime ToDate) {
            return base.Channel.XVol(fromDate, ToDate);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginXVol(System.DateTime fromDate, System.DateTime ToDate, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginXVol(fromDate, ToDate, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Data.DataSet EndXVol(System.IAsyncResult result) {
            return base.Channel.EndXVol(result);
        }
        
        private System.IAsyncResult OnBeginXVol(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.DateTime fromDate = ((System.DateTime)(inValues[0]));
            System.DateTime ToDate = ((System.DateTime)(inValues[1]));
            return this.BeginXVol(fromDate, ToDate, callback, asyncState);
        }
        
        private object[] OnEndXVol(System.IAsyncResult result) {
            System.Data.DataSet retVal = this.EndXVol(result);
            return new object[] {
                    retVal};
        }
        
        private void OnXVolCompleted(object state) {
            if ((this.XVolCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.XVolCompleted(this, new XVolCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void XVolAsync(System.DateTime fromDate, System.DateTime ToDate) {
            this.XVolAsync(fromDate, ToDate, null);
        }
        
        public void XVolAsync(System.DateTime fromDate, System.DateTime ToDate, object userState) {
            if ((this.onBeginXVolDelegate == null)) {
                this.onBeginXVolDelegate = new BeginOperationDelegate(this.OnBeginXVol);
            }
            if ((this.onEndXVolDelegate == null)) {
                this.onEndXVolDelegate = new EndOperationDelegate(this.OnEndXVol);
            }
            if ((this.onXVolCompletedDelegate == null)) {
                this.onXVolCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnXVolCompleted);
            }
            base.InvokeAsync(this.onBeginXVolDelegate, new object[] {
                        fromDate,
                        ToDate}, this.onEndXVolDelegate, this.onXVolCompletedDelegate, userState);
        }
        
        public System.Xml.XmlNode XVolXML(System.DateTime fromDate, System.DateTime ToDate) {
            return base.Channel.XVolXML(fromDate, ToDate);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginXVolXML(System.DateTime fromDate, System.DateTime ToDate, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginXVolXML(fromDate, ToDate, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Xml.XmlNode EndXVolXML(System.IAsyncResult result) {
            return base.Channel.EndXVolXML(result);
        }
        
        private System.IAsyncResult OnBeginXVolXML(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.DateTime fromDate = ((System.DateTime)(inValues[0]));
            System.DateTime ToDate = ((System.DateTime)(inValues[1]));
            return this.BeginXVolXML(fromDate, ToDate, callback, asyncState);
        }
        
        private object[] OnEndXVolXML(System.IAsyncResult result) {
            System.Xml.XmlNode retVal = this.EndXVolXML(result);
            return new object[] {
                    retVal};
        }
        
        private void OnXVolXMLCompleted(object state) {
            if ((this.XVolXMLCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.XVolXMLCompleted(this, new XVolXMLCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void XVolXMLAsync(System.DateTime fromDate, System.DateTime ToDate) {
            this.XVolXMLAsync(fromDate, ToDate, null);
        }
        
        public void XVolXMLAsync(System.DateTime fromDate, System.DateTime ToDate, object userState) {
            if ((this.onBeginXVolXMLDelegate == null)) {
                this.onBeginXVolXMLDelegate = new BeginOperationDelegate(this.OnBeginXVolXML);
            }
            if ((this.onEndXVolXMLDelegate == null)) {
                this.onEndXVolXMLDelegate = new EndOperationDelegate(this.OnEndXVolXML);
            }
            if ((this.onXVolXMLCompletedDelegate == null)) {
                this.onXVolXMLCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnXVolXMLCompleted);
            }
            base.InvokeAsync(this.onBeginXVolXMLDelegate, new object[] {
                        fromDate,
                        ToDate}, this.onEndXVolXMLDelegate, this.onXVolXMLCompletedDelegate, userState);
        }
        
        public System.Xml.XmlNode MainInfoXML() {
            return base.Channel.MainInfoXML();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginMainInfoXML(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginMainInfoXML(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Xml.XmlNode EndMainInfoXML(System.IAsyncResult result) {
            return base.Channel.EndMainInfoXML(result);
        }
        
        private System.IAsyncResult OnBeginMainInfoXML(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginMainInfoXML(callback, asyncState);
        }
        
        private object[] OnEndMainInfoXML(System.IAsyncResult result) {
            System.Xml.XmlNode retVal = this.EndMainInfoXML(result);
            return new object[] {
                    retVal};
        }
        
        private void OnMainInfoXMLCompleted(object state) {
            if ((this.MainInfoXMLCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.MainInfoXMLCompleted(this, new MainInfoXMLCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void MainInfoXMLAsync() {
            this.MainInfoXMLAsync(null);
        }
        
        public void MainInfoXMLAsync(object userState) {
            if ((this.onBeginMainInfoXMLDelegate == null)) {
                this.onBeginMainInfoXMLDelegate = new BeginOperationDelegate(this.OnBeginMainInfoXML);
            }
            if ((this.onEndMainInfoXMLDelegate == null)) {
                this.onEndMainInfoXMLDelegate = new EndOperationDelegate(this.OnEndMainInfoXML);
            }
            if ((this.onMainInfoXMLCompletedDelegate == null)) {
                this.onMainInfoXMLCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnMainInfoXMLCompleted);
            }
            base.InvokeAsync(this.onBeginMainInfoXMLDelegate, null, this.onEndMainInfoXMLDelegate, this.onMainInfoXMLCompletedDelegate, userState);
        }
        
        public System.Xml.XmlNode AllDataInfoXML() {
            return base.Channel.AllDataInfoXML();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginAllDataInfoXML(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginAllDataInfoXML(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Xml.XmlNode EndAllDataInfoXML(System.IAsyncResult result) {
            return base.Channel.EndAllDataInfoXML(result);
        }
        
        private System.IAsyncResult OnBeginAllDataInfoXML(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginAllDataInfoXML(callback, asyncState);
        }
        
        private object[] OnEndAllDataInfoXML(System.IAsyncResult result) {
            System.Xml.XmlNode retVal = this.EndAllDataInfoXML(result);
            return new object[] {
                    retVal};
        }
        
        private void OnAllDataInfoXMLCompleted(object state) {
            if ((this.AllDataInfoXMLCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.AllDataInfoXMLCompleted(this, new AllDataInfoXMLCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void AllDataInfoXMLAsync() {
            this.AllDataInfoXMLAsync(null);
        }
        
        public void AllDataInfoXMLAsync(object userState) {
            if ((this.onBeginAllDataInfoXMLDelegate == null)) {
                this.onBeginAllDataInfoXMLDelegate = new BeginOperationDelegate(this.OnBeginAllDataInfoXML);
            }
            if ((this.onEndAllDataInfoXMLDelegate == null)) {
                this.onEndAllDataInfoXMLDelegate = new EndOperationDelegate(this.OnEndAllDataInfoXML);
            }
            if ((this.onAllDataInfoXMLCompletedDelegate == null)) {
                this.onAllDataInfoXMLCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnAllDataInfoXMLCompleted);
            }
            base.InvokeAsync(this.onBeginAllDataInfoXMLDelegate, null, this.onEndAllDataInfoXMLDelegate, this.onAllDataInfoXMLCompletedDelegate, userState);
        }
        
        public System.Data.DataSet NewsInfo(System.DateTime fromDate, System.DateTime ToDate) {
            return base.Channel.NewsInfo(fromDate, ToDate);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginNewsInfo(System.DateTime fromDate, System.DateTime ToDate, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginNewsInfo(fromDate, ToDate, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Data.DataSet EndNewsInfo(System.IAsyncResult result) {
            return base.Channel.EndNewsInfo(result);
        }
        
        private System.IAsyncResult OnBeginNewsInfo(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.DateTime fromDate = ((System.DateTime)(inValues[0]));
            System.DateTime ToDate = ((System.DateTime)(inValues[1]));
            return this.BeginNewsInfo(fromDate, ToDate, callback, asyncState);
        }
        
        private object[] OnEndNewsInfo(System.IAsyncResult result) {
            System.Data.DataSet retVal = this.EndNewsInfo(result);
            return new object[] {
                    retVal};
        }
        
        private void OnNewsInfoCompleted(object state) {
            if ((this.NewsInfoCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.NewsInfoCompleted(this, new NewsInfoCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void NewsInfoAsync(System.DateTime fromDate, System.DateTime ToDate) {
            this.NewsInfoAsync(fromDate, ToDate, null);
        }
        
        public void NewsInfoAsync(System.DateTime fromDate, System.DateTime ToDate, object userState) {
            if ((this.onBeginNewsInfoDelegate == null)) {
                this.onBeginNewsInfoDelegate = new BeginOperationDelegate(this.OnBeginNewsInfo);
            }
            if ((this.onEndNewsInfoDelegate == null)) {
                this.onEndNewsInfoDelegate = new EndOperationDelegate(this.OnEndNewsInfo);
            }
            if ((this.onNewsInfoCompletedDelegate == null)) {
                this.onNewsInfoCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnNewsInfoCompleted);
            }
            base.InvokeAsync(this.onBeginNewsInfoDelegate, new object[] {
                        fromDate,
                        ToDate}, this.onEndNewsInfoDelegate, this.onNewsInfoCompletedDelegate, userState);
        }
        
        public System.Xml.XmlNode SwapDynamicXML(System.DateTime fromDate, System.DateTime ToDate) {
            return base.Channel.SwapDynamicXML(fromDate, ToDate);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginSwapDynamicXML(System.DateTime fromDate, System.DateTime ToDate, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginSwapDynamicXML(fromDate, ToDate, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Xml.XmlNode EndSwapDynamicXML(System.IAsyncResult result) {
            return base.Channel.EndSwapDynamicXML(result);
        }
        
        private System.IAsyncResult OnBeginSwapDynamicXML(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.DateTime fromDate = ((System.DateTime)(inValues[0]));
            System.DateTime ToDate = ((System.DateTime)(inValues[1]));
            return this.BeginSwapDynamicXML(fromDate, ToDate, callback, asyncState);
        }
        
        private object[] OnEndSwapDynamicXML(System.IAsyncResult result) {
            System.Xml.XmlNode retVal = this.EndSwapDynamicXML(result);
            return new object[] {
                    retVal};
        }
        
        private void OnSwapDynamicXMLCompleted(object state) {
            if ((this.SwapDynamicXMLCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.SwapDynamicXMLCompleted(this, new SwapDynamicXMLCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void SwapDynamicXMLAsync(System.DateTime fromDate, System.DateTime ToDate) {
            this.SwapDynamicXMLAsync(fromDate, ToDate, null);
        }
        
        public void SwapDynamicXMLAsync(System.DateTime fromDate, System.DateTime ToDate, object userState) {
            if ((this.onBeginSwapDynamicXMLDelegate == null)) {
                this.onBeginSwapDynamicXMLDelegate = new BeginOperationDelegate(this.OnBeginSwapDynamicXML);
            }
            if ((this.onEndSwapDynamicXMLDelegate == null)) {
                this.onEndSwapDynamicXMLDelegate = new EndOperationDelegate(this.OnEndSwapDynamicXML);
            }
            if ((this.onSwapDynamicXMLCompletedDelegate == null)) {
                this.onSwapDynamicXMLCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSwapDynamicXMLCompleted);
            }
            base.InvokeAsync(this.onBeginSwapDynamicXMLDelegate, new object[] {
                        fromDate,
                        ToDate}, this.onEndSwapDynamicXMLDelegate, this.onSwapDynamicXMLCompletedDelegate, userState);
        }
        
        public System.Data.DataSet SwapDynamic(System.DateTime fromDate, System.DateTime ToDate) {
            return base.Channel.SwapDynamic(fromDate, ToDate);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginSwapDynamic(System.DateTime fromDate, System.DateTime ToDate, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginSwapDynamic(fromDate, ToDate, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Data.DataSet EndSwapDynamic(System.IAsyncResult result) {
            return base.Channel.EndSwapDynamic(result);
        }
        
        private System.IAsyncResult OnBeginSwapDynamic(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.DateTime fromDate = ((System.DateTime)(inValues[0]));
            System.DateTime ToDate = ((System.DateTime)(inValues[1]));
            return this.BeginSwapDynamic(fromDate, ToDate, callback, asyncState);
        }
        
        private object[] OnEndSwapDynamic(System.IAsyncResult result) {
            System.Data.DataSet retVal = this.EndSwapDynamic(result);
            return new object[] {
                    retVal};
        }
        
        private void OnSwapDynamicCompleted(object state) {
            if ((this.SwapDynamicCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.SwapDynamicCompleted(this, new SwapDynamicCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void SwapDynamicAsync(System.DateTime fromDate, System.DateTime ToDate) {
            this.SwapDynamicAsync(fromDate, ToDate, null);
        }
        
        public void SwapDynamicAsync(System.DateTime fromDate, System.DateTime ToDate, object userState) {
            if ((this.onBeginSwapDynamicDelegate == null)) {
                this.onBeginSwapDynamicDelegate = new BeginOperationDelegate(this.OnBeginSwapDynamic);
            }
            if ((this.onEndSwapDynamicDelegate == null)) {
                this.onEndSwapDynamicDelegate = new EndOperationDelegate(this.OnEndSwapDynamic);
            }
            if ((this.onSwapDynamicCompletedDelegate == null)) {
                this.onSwapDynamicCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSwapDynamicCompleted);
            }
            base.InvokeAsync(this.onBeginSwapDynamicDelegate, new object[] {
                        fromDate,
                        ToDate}, this.onEndSwapDynamicDelegate, this.onSwapDynamicCompletedDelegate, userState);
        }
        
        public System.Xml.XmlNode DepoDynamicXML(System.DateTime fromDate, System.DateTime ToDate) {
            return base.Channel.DepoDynamicXML(fromDate, ToDate);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginDepoDynamicXML(System.DateTime fromDate, System.DateTime ToDate, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginDepoDynamicXML(fromDate, ToDate, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Xml.XmlNode EndDepoDynamicXML(System.IAsyncResult result) {
            return base.Channel.EndDepoDynamicXML(result);
        }
        
        private System.IAsyncResult OnBeginDepoDynamicXML(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.DateTime fromDate = ((System.DateTime)(inValues[0]));
            System.DateTime ToDate = ((System.DateTime)(inValues[1]));
            return this.BeginDepoDynamicXML(fromDate, ToDate, callback, asyncState);
        }
        
        private object[] OnEndDepoDynamicXML(System.IAsyncResult result) {
            System.Xml.XmlNode retVal = this.EndDepoDynamicXML(result);
            return new object[] {
                    retVal};
        }
        
        private void OnDepoDynamicXMLCompleted(object state) {
            if ((this.DepoDynamicXMLCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.DepoDynamicXMLCompleted(this, new DepoDynamicXMLCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void DepoDynamicXMLAsync(System.DateTime fromDate, System.DateTime ToDate) {
            this.DepoDynamicXMLAsync(fromDate, ToDate, null);
        }
        
        public void DepoDynamicXMLAsync(System.DateTime fromDate, System.DateTime ToDate, object userState) {
            if ((this.onBeginDepoDynamicXMLDelegate == null)) {
                this.onBeginDepoDynamicXMLDelegate = new BeginOperationDelegate(this.OnBeginDepoDynamicXML);
            }
            if ((this.onEndDepoDynamicXMLDelegate == null)) {
                this.onEndDepoDynamicXMLDelegate = new EndOperationDelegate(this.OnEndDepoDynamicXML);
            }
            if ((this.onDepoDynamicXMLCompletedDelegate == null)) {
                this.onDepoDynamicXMLCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnDepoDynamicXMLCompleted);
            }
            base.InvokeAsync(this.onBeginDepoDynamicXMLDelegate, new object[] {
                        fromDate,
                        ToDate}, this.onEndDepoDynamicXMLDelegate, this.onDepoDynamicXMLCompletedDelegate, userState);
        }
        
        public System.Data.DataSet DepoDynamic(System.DateTime fromDate, System.DateTime ToDate) {
            return base.Channel.DepoDynamic(fromDate, ToDate);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginDepoDynamic(System.DateTime fromDate, System.DateTime ToDate, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginDepoDynamic(fromDate, ToDate, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Data.DataSet EndDepoDynamic(System.IAsyncResult result) {
            return base.Channel.EndDepoDynamic(result);
        }
        
        private System.IAsyncResult OnBeginDepoDynamic(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.DateTime fromDate = ((System.DateTime)(inValues[0]));
            System.DateTime ToDate = ((System.DateTime)(inValues[1]));
            return this.BeginDepoDynamic(fromDate, ToDate, callback, asyncState);
        }
        
        private object[] OnEndDepoDynamic(System.IAsyncResult result) {
            System.Data.DataSet retVal = this.EndDepoDynamic(result);
            return new object[] {
                    retVal};
        }
        
        private void OnDepoDynamicCompleted(object state) {
            if ((this.DepoDynamicCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.DepoDynamicCompleted(this, new DepoDynamicCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void DepoDynamicAsync(System.DateTime fromDate, System.DateTime ToDate) {
            this.DepoDynamicAsync(fromDate, ToDate, null);
        }
        
        public void DepoDynamicAsync(System.DateTime fromDate, System.DateTime ToDate, object userState) {
            if ((this.onBeginDepoDynamicDelegate == null)) {
                this.onBeginDepoDynamicDelegate = new BeginOperationDelegate(this.OnBeginDepoDynamic);
            }
            if ((this.onEndDepoDynamicDelegate == null)) {
                this.onEndDepoDynamicDelegate = new EndOperationDelegate(this.OnEndDepoDynamic);
            }
            if ((this.onDepoDynamicCompletedDelegate == null)) {
                this.onDepoDynamicCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnDepoDynamicCompleted);
            }
            base.InvokeAsync(this.onBeginDepoDynamicDelegate, new object[] {
                        fromDate,
                        ToDate}, this.onEndDepoDynamicDelegate, this.onDepoDynamicCompletedDelegate, userState);
        }
        
        public System.Xml.XmlNode OstatDynamicXML(System.DateTime fromDate, System.DateTime ToDate) {
            return base.Channel.OstatDynamicXML(fromDate, ToDate);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginOstatDynamicXML(System.DateTime fromDate, System.DateTime ToDate, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginOstatDynamicXML(fromDate, ToDate, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Xml.XmlNode EndOstatDynamicXML(System.IAsyncResult result) {
            return base.Channel.EndOstatDynamicXML(result);
        }
        
        private System.IAsyncResult OnBeginOstatDynamicXML(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.DateTime fromDate = ((System.DateTime)(inValues[0]));
            System.DateTime ToDate = ((System.DateTime)(inValues[1]));
            return this.BeginOstatDynamicXML(fromDate, ToDate, callback, asyncState);
        }
        
        private object[] OnEndOstatDynamicXML(System.IAsyncResult result) {
            System.Xml.XmlNode retVal = this.EndOstatDynamicXML(result);
            return new object[] {
                    retVal};
        }
        
        private void OnOstatDynamicXMLCompleted(object state) {
            if ((this.OstatDynamicXMLCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.OstatDynamicXMLCompleted(this, new OstatDynamicXMLCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void OstatDynamicXMLAsync(System.DateTime fromDate, System.DateTime ToDate) {
            this.OstatDynamicXMLAsync(fromDate, ToDate, null);
        }
        
        public void OstatDynamicXMLAsync(System.DateTime fromDate, System.DateTime ToDate, object userState) {
            if ((this.onBeginOstatDynamicXMLDelegate == null)) {
                this.onBeginOstatDynamicXMLDelegate = new BeginOperationDelegate(this.OnBeginOstatDynamicXML);
            }
            if ((this.onEndOstatDynamicXMLDelegate == null)) {
                this.onEndOstatDynamicXMLDelegate = new EndOperationDelegate(this.OnEndOstatDynamicXML);
            }
            if ((this.onOstatDynamicXMLCompletedDelegate == null)) {
                this.onOstatDynamicXMLCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnOstatDynamicXMLCompleted);
            }
            base.InvokeAsync(this.onBeginOstatDynamicXMLDelegate, new object[] {
                        fromDate,
                        ToDate}, this.onEndOstatDynamicXMLDelegate, this.onOstatDynamicXMLCompletedDelegate, userState);
        }
        
        public System.Data.DataSet OstatDynamic(System.DateTime fromDate, System.DateTime ToDate) {
            return base.Channel.OstatDynamic(fromDate, ToDate);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginOstatDynamic(System.DateTime fromDate, System.DateTime ToDate, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginOstatDynamic(fromDate, ToDate, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Data.DataSet EndOstatDynamic(System.IAsyncResult result) {
            return base.Channel.EndOstatDynamic(result);
        }
        
        private System.IAsyncResult OnBeginOstatDynamic(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.DateTime fromDate = ((System.DateTime)(inValues[0]));
            System.DateTime ToDate = ((System.DateTime)(inValues[1]));
            return this.BeginOstatDynamic(fromDate, ToDate, callback, asyncState);
        }
        
        private object[] OnEndOstatDynamic(System.IAsyncResult result) {
            System.Data.DataSet retVal = this.EndOstatDynamic(result);
            return new object[] {
                    retVal};
        }
        
        private void OnOstatDynamicCompleted(object state) {
            if ((this.OstatDynamicCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.OstatDynamicCompleted(this, new OstatDynamicCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void OstatDynamicAsync(System.DateTime fromDate, System.DateTime ToDate) {
            this.OstatDynamicAsync(fromDate, ToDate, null);
        }
        
        public void OstatDynamicAsync(System.DateTime fromDate, System.DateTime ToDate, object userState) {
            if ((this.onBeginOstatDynamicDelegate == null)) {
                this.onBeginOstatDynamicDelegate = new BeginOperationDelegate(this.OnBeginOstatDynamic);
            }
            if ((this.onEndOstatDynamicDelegate == null)) {
                this.onEndOstatDynamicDelegate = new EndOperationDelegate(this.OnEndOstatDynamic);
            }
            if ((this.onOstatDynamicCompletedDelegate == null)) {
                this.onOstatDynamicCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnOstatDynamicCompleted);
            }
            base.InvokeAsync(this.onBeginOstatDynamicDelegate, new object[] {
                        fromDate,
                        ToDate}, this.onEndOstatDynamicDelegate, this.onOstatDynamicCompletedDelegate, userState);
        }
        
        public System.Xml.XmlNode DragMetDynamicXML(System.DateTime fromDate, System.DateTime ToDate) {
            return base.Channel.DragMetDynamicXML(fromDate, ToDate);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginDragMetDynamicXML(System.DateTime fromDate, System.DateTime ToDate, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginDragMetDynamicXML(fromDate, ToDate, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Xml.XmlNode EndDragMetDynamicXML(System.IAsyncResult result) {
            return base.Channel.EndDragMetDynamicXML(result);
        }
        
        private System.IAsyncResult OnBeginDragMetDynamicXML(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.DateTime fromDate = ((System.DateTime)(inValues[0]));
            System.DateTime ToDate = ((System.DateTime)(inValues[1]));
            return this.BeginDragMetDynamicXML(fromDate, ToDate, callback, asyncState);
        }
        
        private object[] OnEndDragMetDynamicXML(System.IAsyncResult result) {
            System.Xml.XmlNode retVal = this.EndDragMetDynamicXML(result);
            return new object[] {
                    retVal};
        }
        
        private void OnDragMetDynamicXMLCompleted(object state) {
            if ((this.DragMetDynamicXMLCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.DragMetDynamicXMLCompleted(this, new DragMetDynamicXMLCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void DragMetDynamicXMLAsync(System.DateTime fromDate, System.DateTime ToDate) {
            this.DragMetDynamicXMLAsync(fromDate, ToDate, null);
        }
        
        public void DragMetDynamicXMLAsync(System.DateTime fromDate, System.DateTime ToDate, object userState) {
            if ((this.onBeginDragMetDynamicXMLDelegate == null)) {
                this.onBeginDragMetDynamicXMLDelegate = new BeginOperationDelegate(this.OnBeginDragMetDynamicXML);
            }
            if ((this.onEndDragMetDynamicXMLDelegate == null)) {
                this.onEndDragMetDynamicXMLDelegate = new EndOperationDelegate(this.OnEndDragMetDynamicXML);
            }
            if ((this.onDragMetDynamicXMLCompletedDelegate == null)) {
                this.onDragMetDynamicXMLCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnDragMetDynamicXMLCompleted);
            }
            base.InvokeAsync(this.onBeginDragMetDynamicXMLDelegate, new object[] {
                        fromDate,
                        ToDate}, this.onEndDragMetDynamicXMLDelegate, this.onDragMetDynamicXMLCompletedDelegate, userState);
        }
        
        public System.Data.DataSet DragMetDynamic(System.DateTime fromDate, System.DateTime ToDate) {
            return base.Channel.DragMetDynamic(fromDate, ToDate);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginDragMetDynamic(System.DateTime fromDate, System.DateTime ToDate, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginDragMetDynamic(fromDate, ToDate, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Data.DataSet EndDragMetDynamic(System.IAsyncResult result) {
            return base.Channel.EndDragMetDynamic(result);
        }
        
        private System.IAsyncResult OnBeginDragMetDynamic(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.DateTime fromDate = ((System.DateTime)(inValues[0]));
            System.DateTime ToDate = ((System.DateTime)(inValues[1]));
            return this.BeginDragMetDynamic(fromDate, ToDate, callback, asyncState);
        }
        
        private object[] OnEndDragMetDynamic(System.IAsyncResult result) {
            System.Data.DataSet retVal = this.EndDragMetDynamic(result);
            return new object[] {
                    retVal};
        }
        
        private void OnDragMetDynamicCompleted(object state) {
            if ((this.DragMetDynamicCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.DragMetDynamicCompleted(this, new DragMetDynamicCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void DragMetDynamicAsync(System.DateTime fromDate, System.DateTime ToDate) {
            this.DragMetDynamicAsync(fromDate, ToDate, null);
        }
        
        public void DragMetDynamicAsync(System.DateTime fromDate, System.DateTime ToDate, object userState) {
            if ((this.onBeginDragMetDynamicDelegate == null)) {
                this.onBeginDragMetDynamicDelegate = new BeginOperationDelegate(this.OnBeginDragMetDynamic);
            }
            if ((this.onEndDragMetDynamicDelegate == null)) {
                this.onEndDragMetDynamicDelegate = new EndOperationDelegate(this.OnEndDragMetDynamic);
            }
            if ((this.onDragMetDynamicCompletedDelegate == null)) {
                this.onDragMetDynamicCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnDragMetDynamicCompleted);
            }
            base.InvokeAsync(this.onBeginDragMetDynamicDelegate, new object[] {
                        fromDate,
                        ToDate}, this.onEndDragMetDynamicDelegate, this.onDragMetDynamicCompletedDelegate, userState);
        }
        
        public System.DateTime GetLatestDateTime() {
            return base.Channel.GetLatestDateTime();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetLatestDateTime(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetLatestDateTime(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.DateTime EndGetLatestDateTime(System.IAsyncResult result) {
            return base.Channel.EndGetLatestDateTime(result);
        }
        
        private System.IAsyncResult OnBeginGetLatestDateTime(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginGetLatestDateTime(callback, asyncState);
        }
        
        private object[] OnEndGetLatestDateTime(System.IAsyncResult result) {
            System.DateTime retVal = this.EndGetLatestDateTime(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetLatestDateTimeCompleted(object state) {
            if ((this.GetLatestDateTimeCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetLatestDateTimeCompleted(this, new GetLatestDateTimeCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetLatestDateTimeAsync() {
            this.GetLatestDateTimeAsync(null);
        }
        
        public void GetLatestDateTimeAsync(object userState) {
            if ((this.onBeginGetLatestDateTimeDelegate == null)) {
                this.onBeginGetLatestDateTimeDelegate = new BeginOperationDelegate(this.OnBeginGetLatestDateTime);
            }
            if ((this.onEndGetLatestDateTimeDelegate == null)) {
                this.onEndGetLatestDateTimeDelegate = new EndOperationDelegate(this.OnEndGetLatestDateTime);
            }
            if ((this.onGetLatestDateTimeCompletedDelegate == null)) {
                this.onGetLatestDateTimeCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetLatestDateTimeCompleted);
            }
            base.InvokeAsync(this.onBeginGetLatestDateTimeDelegate, null, this.onEndGetLatestDateTimeDelegate, this.onGetLatestDateTimeCompletedDelegate, userState);
        }
        
        public string GetLatestDate() {
            return base.Channel.GetLatestDate();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetLatestDate(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetLatestDate(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public string EndGetLatestDate(System.IAsyncResult result) {
            return base.Channel.EndGetLatestDate(result);
        }
        
        private System.IAsyncResult OnBeginGetLatestDate(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginGetLatestDate(callback, asyncState);
        }
        
        private object[] OnEndGetLatestDate(System.IAsyncResult result) {
            string retVal = this.EndGetLatestDate(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetLatestDateCompleted(object state) {
            if ((this.GetLatestDateCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetLatestDateCompleted(this, new GetLatestDateCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetLatestDateAsync() {
            this.GetLatestDateAsync(null);
        }
        
        public void GetLatestDateAsync(object userState) {
            if ((this.onBeginGetLatestDateDelegate == null)) {
                this.onBeginGetLatestDateDelegate = new BeginOperationDelegate(this.OnBeginGetLatestDate);
            }
            if ((this.onEndGetLatestDateDelegate == null)) {
                this.onEndGetLatestDateDelegate = new EndOperationDelegate(this.OnEndGetLatestDate);
            }
            if ((this.onGetLatestDateCompletedDelegate == null)) {
                this.onGetLatestDateCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetLatestDateCompleted);
            }
            base.InvokeAsync(this.onBeginGetLatestDateDelegate, null, this.onEndGetLatestDateDelegate, this.onGetLatestDateCompletedDelegate, userState);
        }
        
        public System.DateTime GetLatestDateTimeSeld() {
            return base.Channel.GetLatestDateTimeSeld();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetLatestDateTimeSeld(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetLatestDateTimeSeld(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.DateTime EndGetLatestDateTimeSeld(System.IAsyncResult result) {
            return base.Channel.EndGetLatestDateTimeSeld(result);
        }
        
        private System.IAsyncResult OnBeginGetLatestDateTimeSeld(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginGetLatestDateTimeSeld(callback, asyncState);
        }
        
        private object[] OnEndGetLatestDateTimeSeld(System.IAsyncResult result) {
            System.DateTime retVal = this.EndGetLatestDateTimeSeld(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetLatestDateTimeSeldCompleted(object state) {
            if ((this.GetLatestDateTimeSeldCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetLatestDateTimeSeldCompleted(this, new GetLatestDateTimeSeldCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetLatestDateTimeSeldAsync() {
            this.GetLatestDateTimeSeldAsync(null);
        }
        
        public void GetLatestDateTimeSeldAsync(object userState) {
            if ((this.onBeginGetLatestDateTimeSeldDelegate == null)) {
                this.onBeginGetLatestDateTimeSeldDelegate = new BeginOperationDelegate(this.OnBeginGetLatestDateTimeSeld);
            }
            if ((this.onEndGetLatestDateTimeSeldDelegate == null)) {
                this.onEndGetLatestDateTimeSeldDelegate = new EndOperationDelegate(this.OnEndGetLatestDateTimeSeld);
            }
            if ((this.onGetLatestDateTimeSeldCompletedDelegate == null)) {
                this.onGetLatestDateTimeSeldCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetLatestDateTimeSeldCompleted);
            }
            base.InvokeAsync(this.onBeginGetLatestDateTimeSeldDelegate, null, this.onEndGetLatestDateTimeSeldDelegate, this.onGetLatestDateTimeSeldCompletedDelegate, userState);
        }
        
        public string GetLatestDateSeld() {
            return base.Channel.GetLatestDateSeld();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetLatestDateSeld(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetLatestDateSeld(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public string EndGetLatestDateSeld(System.IAsyncResult result) {
            return base.Channel.EndGetLatestDateSeld(result);
        }
        
        private System.IAsyncResult OnBeginGetLatestDateSeld(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginGetLatestDateSeld(callback, asyncState);
        }
        
        private object[] OnEndGetLatestDateSeld(System.IAsyncResult result) {
            string retVal = this.EndGetLatestDateSeld(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetLatestDateSeldCompleted(object state) {
            if ((this.GetLatestDateSeldCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetLatestDateSeldCompleted(this, new GetLatestDateSeldCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetLatestDateSeldAsync() {
            this.GetLatestDateSeldAsync(null);
        }
        
        public void GetLatestDateSeldAsync(object userState) {
            if ((this.onBeginGetLatestDateSeldDelegate == null)) {
                this.onBeginGetLatestDateSeldDelegate = new BeginOperationDelegate(this.OnBeginGetLatestDateSeld);
            }
            if ((this.onEndGetLatestDateSeldDelegate == null)) {
                this.onEndGetLatestDateSeldDelegate = new EndOperationDelegate(this.OnEndGetLatestDateSeld);
            }
            if ((this.onGetLatestDateSeldCompletedDelegate == null)) {
                this.onGetLatestDateSeldCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetLatestDateSeldCompleted);
            }
            base.InvokeAsync(this.onBeginGetLatestDateSeldDelegate, null, this.onEndGetLatestDateSeldDelegate, this.onGetLatestDateSeldCompletedDelegate, userState);
        }
        
        public System.Xml.XmlNode EnumValutesXML(bool Seld) {
            return base.Channel.EnumValutesXML(Seld);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginEnumValutesXML(bool Seld, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginEnumValutesXML(Seld, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Xml.XmlNode EndEnumValutesXML(System.IAsyncResult result) {
            return base.Channel.EndEnumValutesXML(result);
        }
        
        private System.IAsyncResult OnBeginEnumValutesXML(object[] inValues, System.AsyncCallback callback, object asyncState) {
            bool Seld = ((bool)(inValues[0]));
            return this.BeginEnumValutesXML(Seld, callback, asyncState);
        }
        
        private object[] OnEndEnumValutesXML(System.IAsyncResult result) {
            System.Xml.XmlNode retVal = this.EndEnumValutesXML(result);
            return new object[] {
                    retVal};
        }
        
        private void OnEnumValutesXMLCompleted(object state) {
            if ((this.EnumValutesXMLCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.EnumValutesXMLCompleted(this, new EnumValutesXMLCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void EnumValutesXMLAsync(bool Seld) {
            this.EnumValutesXMLAsync(Seld, null);
        }
        
        public void EnumValutesXMLAsync(bool Seld, object userState) {
            if ((this.onBeginEnumValutesXMLDelegate == null)) {
                this.onBeginEnumValutesXMLDelegate = new BeginOperationDelegate(this.OnBeginEnumValutesXML);
            }
            if ((this.onEndEnumValutesXMLDelegate == null)) {
                this.onEndEnumValutesXMLDelegate = new EndOperationDelegate(this.OnEndEnumValutesXML);
            }
            if ((this.onEnumValutesXMLCompletedDelegate == null)) {
                this.onEnumValutesXMLCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnEnumValutesXMLCompleted);
            }
            base.InvokeAsync(this.onBeginEnumValutesXMLDelegate, new object[] {
                        Seld}, this.onEndEnumValutesXMLDelegate, this.onEnumValutesXMLCompletedDelegate, userState);
        }
        
        public System.Data.DataSet EnumValutes(bool Seld) {
            return base.Channel.EnumValutes(Seld);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginEnumValutes(bool Seld, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginEnumValutes(Seld, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Data.DataSet EndEnumValutes(System.IAsyncResult result) {
            return base.Channel.EndEnumValutes(result);
        }
        
        private System.IAsyncResult OnBeginEnumValutes(object[] inValues, System.AsyncCallback callback, object asyncState) {
            bool Seld = ((bool)(inValues[0]));
            return this.BeginEnumValutes(Seld, callback, asyncState);
        }
        
        private object[] OnEndEnumValutes(System.IAsyncResult result) {
            System.Data.DataSet retVal = this.EndEnumValutes(result);
            return new object[] {
                    retVal};
        }
        
        private void OnEnumValutesCompleted(object state) {
            if ((this.EnumValutesCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.EnumValutesCompleted(this, new EnumValutesCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void EnumValutesAsync(bool Seld) {
            this.EnumValutesAsync(Seld, null);
        }
        
        public void EnumValutesAsync(bool Seld, object userState) {
            if ((this.onBeginEnumValutesDelegate == null)) {
                this.onBeginEnumValutesDelegate = new BeginOperationDelegate(this.OnBeginEnumValutes);
            }
            if ((this.onEndEnumValutesDelegate == null)) {
                this.onEndEnumValutesDelegate = new EndOperationDelegate(this.OnEndEnumValutes);
            }
            if ((this.onEnumValutesCompletedDelegate == null)) {
                this.onEnumValutesCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnEnumValutesCompleted);
            }
            base.InvokeAsync(this.onBeginEnumValutesDelegate, new object[] {
                        Seld}, this.onEndEnumValutesDelegate, this.onEnumValutesCompletedDelegate, userState);
        }
        
        public System.Xml.XmlNode GetCursDynamicXML(System.DateTime FromDate, System.DateTime ToDate, string ValutaCode) {
            return base.Channel.GetCursDynamicXML(FromDate, ToDate, ValutaCode);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetCursDynamicXML(System.DateTime FromDate, System.DateTime ToDate, string ValutaCode, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetCursDynamicXML(FromDate, ToDate, ValutaCode, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Xml.XmlNode EndGetCursDynamicXML(System.IAsyncResult result) {
            return base.Channel.EndGetCursDynamicXML(result);
        }
        
        private System.IAsyncResult OnBeginGetCursDynamicXML(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.DateTime FromDate = ((System.DateTime)(inValues[0]));
            System.DateTime ToDate = ((System.DateTime)(inValues[1]));
            string ValutaCode = ((string)(inValues[2]));
            return this.BeginGetCursDynamicXML(FromDate, ToDate, ValutaCode, callback, asyncState);
        }
        
        private object[] OnEndGetCursDynamicXML(System.IAsyncResult result) {
            System.Xml.XmlNode retVal = this.EndGetCursDynamicXML(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetCursDynamicXMLCompleted(object state) {
            if ((this.GetCursDynamicXMLCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetCursDynamicXMLCompleted(this, new GetCursDynamicXMLCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetCursDynamicXMLAsync(System.DateTime FromDate, System.DateTime ToDate, string ValutaCode) {
            this.GetCursDynamicXMLAsync(FromDate, ToDate, ValutaCode, null);
        }
        
        public void GetCursDynamicXMLAsync(System.DateTime FromDate, System.DateTime ToDate, string ValutaCode, object userState) {
            if ((this.onBeginGetCursDynamicXMLDelegate == null)) {
                this.onBeginGetCursDynamicXMLDelegate = new BeginOperationDelegate(this.OnBeginGetCursDynamicXML);
            }
            if ((this.onEndGetCursDynamicXMLDelegate == null)) {
                this.onEndGetCursDynamicXMLDelegate = new EndOperationDelegate(this.OnEndGetCursDynamicXML);
            }
            if ((this.onGetCursDynamicXMLCompletedDelegate == null)) {
                this.onGetCursDynamicXMLCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetCursDynamicXMLCompleted);
            }
            base.InvokeAsync(this.onBeginGetCursDynamicXMLDelegate, new object[] {
                        FromDate,
                        ToDate,
                        ValutaCode}, this.onEndGetCursDynamicXMLDelegate, this.onGetCursDynamicXMLCompletedDelegate, userState);
        }
        
        public System.Data.DataSet GetCursDynamic(System.DateTime FromDate, System.DateTime ToDate, string ValutaCode) {
            return base.Channel.GetCursDynamic(FromDate, ToDate, ValutaCode);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetCursDynamic(System.DateTime FromDate, System.DateTime ToDate, string ValutaCode, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetCursDynamic(FromDate, ToDate, ValutaCode, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Data.DataSet EndGetCursDynamic(System.IAsyncResult result) {
            return base.Channel.EndGetCursDynamic(result);
        }
        
        private System.IAsyncResult OnBeginGetCursDynamic(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.DateTime FromDate = ((System.DateTime)(inValues[0]));
            System.DateTime ToDate = ((System.DateTime)(inValues[1]));
            string ValutaCode = ((string)(inValues[2]));
            return this.BeginGetCursDynamic(FromDate, ToDate, ValutaCode, callback, asyncState);
        }
        
        private object[] OnEndGetCursDynamic(System.IAsyncResult result) {
            System.Data.DataSet retVal = this.EndGetCursDynamic(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetCursDynamicCompleted(object state) {
            if ((this.GetCursDynamicCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetCursDynamicCompleted(this, new GetCursDynamicCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetCursDynamicAsync(System.DateTime FromDate, System.DateTime ToDate, string ValutaCode) {
            this.GetCursDynamicAsync(FromDate, ToDate, ValutaCode, null);
        }
        
        public void GetCursDynamicAsync(System.DateTime FromDate, System.DateTime ToDate, string ValutaCode, object userState) {
            if ((this.onBeginGetCursDynamicDelegate == null)) {
                this.onBeginGetCursDynamicDelegate = new BeginOperationDelegate(this.OnBeginGetCursDynamic);
            }
            if ((this.onEndGetCursDynamicDelegate == null)) {
                this.onEndGetCursDynamicDelegate = new EndOperationDelegate(this.OnEndGetCursDynamic);
            }
            if ((this.onGetCursDynamicCompletedDelegate == null)) {
                this.onGetCursDynamicCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetCursDynamicCompleted);
            }
            base.InvokeAsync(this.onBeginGetCursDynamicDelegate, new object[] {
                        FromDate,
                        ToDate,
                        ValutaCode}, this.onEndGetCursDynamicDelegate, this.onGetCursDynamicCompletedDelegate, userState);
        }
        
        public System.Xml.XmlNode GetCursOnDateXML(System.DateTime On_date) {
            return base.Channel.GetCursOnDateXML(On_date);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetCursOnDateXML(System.DateTime On_date, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetCursOnDateXML(On_date, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Xml.XmlNode EndGetCursOnDateXML(System.IAsyncResult result) {
            return base.Channel.EndGetCursOnDateXML(result);
        }
        
        private System.IAsyncResult OnBeginGetCursOnDateXML(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.DateTime On_date = ((System.DateTime)(inValues[0]));
            return this.BeginGetCursOnDateXML(On_date, callback, asyncState);
        }
        
        private object[] OnEndGetCursOnDateXML(System.IAsyncResult result) {
            System.Xml.XmlNode retVal = this.EndGetCursOnDateXML(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetCursOnDateXMLCompleted(object state) {
            if ((this.GetCursOnDateXMLCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetCursOnDateXMLCompleted(this, new GetCursOnDateXMLCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetCursOnDateXMLAsync(System.DateTime On_date) {
            this.GetCursOnDateXMLAsync(On_date, null);
        }
        
        public void GetCursOnDateXMLAsync(System.DateTime On_date, object userState) {
            if ((this.onBeginGetCursOnDateXMLDelegate == null)) {
                this.onBeginGetCursOnDateXMLDelegate = new BeginOperationDelegate(this.OnBeginGetCursOnDateXML);
            }
            if ((this.onEndGetCursOnDateXMLDelegate == null)) {
                this.onEndGetCursOnDateXMLDelegate = new EndOperationDelegate(this.OnEndGetCursOnDateXML);
            }
            if ((this.onGetCursOnDateXMLCompletedDelegate == null)) {
                this.onGetCursOnDateXMLCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetCursOnDateXMLCompleted);
            }
            base.InvokeAsync(this.onBeginGetCursOnDateXMLDelegate, new object[] {
                        On_date}, this.onEndGetCursOnDateXMLDelegate, this.onGetCursOnDateXMLCompletedDelegate, userState);
        }
        
        public System.Xml.XmlNode GetSeldCursOnDateXML(System.DateTime On_date) {
            return base.Channel.GetSeldCursOnDateXML(On_date);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetSeldCursOnDateXML(System.DateTime On_date, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetSeldCursOnDateXML(On_date, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Xml.XmlNode EndGetSeldCursOnDateXML(System.IAsyncResult result) {
            return base.Channel.EndGetSeldCursOnDateXML(result);
        }
        
        private System.IAsyncResult OnBeginGetSeldCursOnDateXML(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.DateTime On_date = ((System.DateTime)(inValues[0]));
            return this.BeginGetSeldCursOnDateXML(On_date, callback, asyncState);
        }
        
        private object[] OnEndGetSeldCursOnDateXML(System.IAsyncResult result) {
            System.Xml.XmlNode retVal = this.EndGetSeldCursOnDateXML(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetSeldCursOnDateXMLCompleted(object state) {
            if ((this.GetSeldCursOnDateXMLCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetSeldCursOnDateXMLCompleted(this, new GetSeldCursOnDateXMLCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetSeldCursOnDateXMLAsync(System.DateTime On_date) {
            this.GetSeldCursOnDateXMLAsync(On_date, null);
        }
        
        public void GetSeldCursOnDateXMLAsync(System.DateTime On_date, object userState) {
            if ((this.onBeginGetSeldCursOnDateXMLDelegate == null)) {
                this.onBeginGetSeldCursOnDateXMLDelegate = new BeginOperationDelegate(this.OnBeginGetSeldCursOnDateXML);
            }
            if ((this.onEndGetSeldCursOnDateXMLDelegate == null)) {
                this.onEndGetSeldCursOnDateXMLDelegate = new EndOperationDelegate(this.OnEndGetSeldCursOnDateXML);
            }
            if ((this.onGetSeldCursOnDateXMLCompletedDelegate == null)) {
                this.onGetSeldCursOnDateXMLCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetSeldCursOnDateXMLCompleted);
            }
            base.InvokeAsync(this.onBeginGetSeldCursOnDateXMLDelegate, new object[] {
                        On_date}, this.onEndGetSeldCursOnDateXMLDelegate, this.onGetSeldCursOnDateXMLCompletedDelegate, userState);
        }
        
        public System.Data.DataSet GetSeldCursOnDate(System.DateTime On_date) {
            return base.Channel.GetSeldCursOnDate(On_date);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetSeldCursOnDate(System.DateTime On_date, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetSeldCursOnDate(On_date, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Data.DataSet EndGetSeldCursOnDate(System.IAsyncResult result) {
            return base.Channel.EndGetSeldCursOnDate(result);
        }
        
        private System.IAsyncResult OnBeginGetSeldCursOnDate(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.DateTime On_date = ((System.DateTime)(inValues[0]));
            return this.BeginGetSeldCursOnDate(On_date, callback, asyncState);
        }
        
        private object[] OnEndGetSeldCursOnDate(System.IAsyncResult result) {
            System.Data.DataSet retVal = this.EndGetSeldCursOnDate(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetSeldCursOnDateCompleted(object state) {
            if ((this.GetSeldCursOnDateCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetSeldCursOnDateCompleted(this, new GetSeldCursOnDateCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetSeldCursOnDateAsync(System.DateTime On_date) {
            this.GetSeldCursOnDateAsync(On_date, null);
        }
        
        public void GetSeldCursOnDateAsync(System.DateTime On_date, object userState) {
            if ((this.onBeginGetSeldCursOnDateDelegate == null)) {
                this.onBeginGetSeldCursOnDateDelegate = new BeginOperationDelegate(this.OnBeginGetSeldCursOnDate);
            }
            if ((this.onEndGetSeldCursOnDateDelegate == null)) {
                this.onEndGetSeldCursOnDateDelegate = new EndOperationDelegate(this.OnEndGetSeldCursOnDate);
            }
            if ((this.onGetSeldCursOnDateCompletedDelegate == null)) {
                this.onGetSeldCursOnDateCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetSeldCursOnDateCompleted);
            }
            base.InvokeAsync(this.onBeginGetSeldCursOnDateDelegate, new object[] {
                        On_date}, this.onEndGetSeldCursOnDateDelegate, this.onGetSeldCursOnDateCompletedDelegate, userState);
        }
        
        public System.Data.DataSet GetCursOnDate(System.DateTime On_date) {
            return base.Channel.GetCursOnDate(On_date);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetCursOnDate(System.DateTime On_date, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetCursOnDate(On_date, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Data.DataSet EndGetCursOnDate(System.IAsyncResult result) {
            return base.Channel.EndGetCursOnDate(result);
        }
        
        private System.IAsyncResult OnBeginGetCursOnDate(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.DateTime On_date = ((System.DateTime)(inValues[0]));
            return this.BeginGetCursOnDate(On_date, callback, asyncState);
        }
        
        private object[] OnEndGetCursOnDate(System.IAsyncResult result) {
            System.Data.DataSet retVal = this.EndGetCursOnDate(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetCursOnDateCompleted(object state) {
            if ((this.GetCursOnDateCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetCursOnDateCompleted(this, new GetCursOnDateCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetCursOnDateAsync(System.DateTime On_date) {
            this.GetCursOnDateAsync(On_date, null);
        }
        
        public void GetCursOnDateAsync(System.DateTime On_date, object userState) {
            if ((this.onBeginGetCursOnDateDelegate == null)) {
                this.onBeginGetCursOnDateDelegate = new BeginOperationDelegate(this.OnBeginGetCursOnDate);
            }
            if ((this.onEndGetCursOnDateDelegate == null)) {
                this.onEndGetCursOnDateDelegate = new EndOperationDelegate(this.OnEndGetCursOnDate);
            }
            if ((this.onGetCursOnDateCompletedDelegate == null)) {
                this.onGetCursOnDateCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetCursOnDateCompleted);
            }
            base.InvokeAsync(this.onBeginGetCursOnDateDelegate, new object[] {
                        On_date}, this.onEndGetCursOnDateDelegate, this.onGetCursOnDateCompletedDelegate, userState);
        }
    }
}
